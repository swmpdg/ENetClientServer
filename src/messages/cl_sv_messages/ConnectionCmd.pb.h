// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConnectionCmd.proto

#ifndef PROTOBUF_ConnectionCmd_2eproto__INCLUDED
#define PROTOBUF_ConnectionCmd_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace cl_sv_messages {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ConnectionCmd_2eproto();
void protobuf_AssignDesc_ConnectionCmd_2eproto();
void protobuf_ShutdownFile_ConnectionCmd_2eproto();

class ConnectionCmd;
class ConnectionCmd_NetTableState;

// ===================================================================

class ConnectionCmd_NetTableState : public ::google::protobuf::Message {
 public:
  ConnectionCmd_NetTableState();
  virtual ~ConnectionCmd_NetTableState();

  ConnectionCmd_NetTableState(const ConnectionCmd_NetTableState& from);

  inline ConnectionCmd_NetTableState& operator=(const ConnectionCmd_NetTableState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnectionCmd_NetTableState& default_instance();

  void Swap(ConnectionCmd_NetTableState* other);

  // implements Message ----------------------------------------------

  ConnectionCmd_NetTableState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConnectionCmd_NetTableState& from);
  void MergeFrom(const ConnectionCmd_NetTableState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 tableID = 1;
  inline bool has_tableid() const;
  inline void clear_tableid();
  static const int kTableIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tableid() const;
  inline void set_tableid(::google::protobuf::uint32 value);

  // required uint32 stringIndex = 2;
  inline bool has_stringindex() const;
  inline void clear_stringindex();
  static const int kStringIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 stringindex() const;
  inline void set_stringindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:cl_sv_messages.ConnectionCmd.NetTableState)
 private:
  inline void set_has_tableid();
  inline void clear_has_tableid();
  inline void set_has_stringindex();
  inline void clear_has_stringindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 tableid_;
  ::google::protobuf::uint32 stringindex_;
  friend void  protobuf_AddDesc_ConnectionCmd_2eproto();
  friend void protobuf_AssignDesc_ConnectionCmd_2eproto();
  friend void protobuf_ShutdownFile_ConnectionCmd_2eproto();

  void InitAsDefaultInstance();
  static ConnectionCmd_NetTableState* default_instance_;
};
// -------------------------------------------------------------------

class ConnectionCmd : public ::google::protobuf::Message {
 public:
  ConnectionCmd();
  virtual ~ConnectionCmd();

  ConnectionCmd(const ConnectionCmd& from);

  inline ConnectionCmd& operator=(const ConnectionCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnectionCmd& default_instance();

  void Swap(ConnectionCmd* other);

  // implements Message ----------------------------------------------

  ConnectionCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConnectionCmd& from);
  void MergeFrom(const ConnectionCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ConnectionCmd_NetTableState NetTableState;

  // accessors -------------------------------------------------------

  // required uint32 stage = 1;
  inline bool has_stage() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 1;
  inline ::google::protobuf::uint32 stage() const;
  inline void set_stage(::google::protobuf::uint32 value);

  // optional .cl_sv_messages.ConnectionCmd.NetTableState netTableState = 2;
  inline bool has_nettablestate() const;
  inline void clear_nettablestate();
  static const int kNetTableStateFieldNumber = 2;
  inline const ::cl_sv_messages::ConnectionCmd_NetTableState& nettablestate() const;
  inline ::cl_sv_messages::ConnectionCmd_NetTableState* mutable_nettablestate();
  inline ::cl_sv_messages::ConnectionCmd_NetTableState* release_nettablestate();
  inline void set_allocated_nettablestate(::cl_sv_messages::ConnectionCmd_NetTableState* nettablestate);

  // @@protoc_insertion_point(class_scope:cl_sv_messages.ConnectionCmd)
 private:
  inline void set_has_stage();
  inline void clear_has_stage();
  inline void set_has_nettablestate();
  inline void clear_has_nettablestate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::cl_sv_messages::ConnectionCmd_NetTableState* nettablestate_;
  ::google::protobuf::uint32 stage_;
  friend void  protobuf_AddDesc_ConnectionCmd_2eproto();
  friend void protobuf_AssignDesc_ConnectionCmd_2eproto();
  friend void protobuf_ShutdownFile_ConnectionCmd_2eproto();

  void InitAsDefaultInstance();
  static ConnectionCmd* default_instance_;
};
// ===================================================================


// ===================================================================

// ConnectionCmd_NetTableState

// required uint32 tableID = 1;
inline bool ConnectionCmd_NetTableState::has_tableid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConnectionCmd_NetTableState::set_has_tableid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConnectionCmd_NetTableState::clear_has_tableid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConnectionCmd_NetTableState::clear_tableid() {
  tableid_ = 0u;
  clear_has_tableid();
}
inline ::google::protobuf::uint32 ConnectionCmd_NetTableState::tableid() const {
  // @@protoc_insertion_point(field_get:cl_sv_messages.ConnectionCmd.NetTableState.tableID)
  return tableid_;
}
inline void ConnectionCmd_NetTableState::set_tableid(::google::protobuf::uint32 value) {
  set_has_tableid();
  tableid_ = value;
  // @@protoc_insertion_point(field_set:cl_sv_messages.ConnectionCmd.NetTableState.tableID)
}

// required uint32 stringIndex = 2;
inline bool ConnectionCmd_NetTableState::has_stringindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConnectionCmd_NetTableState::set_has_stringindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConnectionCmd_NetTableState::clear_has_stringindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConnectionCmd_NetTableState::clear_stringindex() {
  stringindex_ = 0u;
  clear_has_stringindex();
}
inline ::google::protobuf::uint32 ConnectionCmd_NetTableState::stringindex() const {
  // @@protoc_insertion_point(field_get:cl_sv_messages.ConnectionCmd.NetTableState.stringIndex)
  return stringindex_;
}
inline void ConnectionCmd_NetTableState::set_stringindex(::google::protobuf::uint32 value) {
  set_has_stringindex();
  stringindex_ = value;
  // @@protoc_insertion_point(field_set:cl_sv_messages.ConnectionCmd.NetTableState.stringIndex)
}

// -------------------------------------------------------------------

// ConnectionCmd

// required uint32 stage = 1;
inline bool ConnectionCmd::has_stage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConnectionCmd::set_has_stage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConnectionCmd::clear_has_stage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConnectionCmd::clear_stage() {
  stage_ = 0u;
  clear_has_stage();
}
inline ::google::protobuf::uint32 ConnectionCmd::stage() const {
  // @@protoc_insertion_point(field_get:cl_sv_messages.ConnectionCmd.stage)
  return stage_;
}
inline void ConnectionCmd::set_stage(::google::protobuf::uint32 value) {
  set_has_stage();
  stage_ = value;
  // @@protoc_insertion_point(field_set:cl_sv_messages.ConnectionCmd.stage)
}

// optional .cl_sv_messages.ConnectionCmd.NetTableState netTableState = 2;
inline bool ConnectionCmd::has_nettablestate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConnectionCmd::set_has_nettablestate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConnectionCmd::clear_has_nettablestate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConnectionCmd::clear_nettablestate() {
  if (nettablestate_ != NULL) nettablestate_->::cl_sv_messages::ConnectionCmd_NetTableState::Clear();
  clear_has_nettablestate();
}
inline const ::cl_sv_messages::ConnectionCmd_NetTableState& ConnectionCmd::nettablestate() const {
  // @@protoc_insertion_point(field_get:cl_sv_messages.ConnectionCmd.netTableState)
  return nettablestate_ != NULL ? *nettablestate_ : *default_instance_->nettablestate_;
}
inline ::cl_sv_messages::ConnectionCmd_NetTableState* ConnectionCmd::mutable_nettablestate() {
  set_has_nettablestate();
  if (nettablestate_ == NULL) nettablestate_ = new ::cl_sv_messages::ConnectionCmd_NetTableState;
  // @@protoc_insertion_point(field_mutable:cl_sv_messages.ConnectionCmd.netTableState)
  return nettablestate_;
}
inline ::cl_sv_messages::ConnectionCmd_NetTableState* ConnectionCmd::release_nettablestate() {
  clear_has_nettablestate();
  ::cl_sv_messages::ConnectionCmd_NetTableState* temp = nettablestate_;
  nettablestate_ = NULL;
  return temp;
}
inline void ConnectionCmd::set_allocated_nettablestate(::cl_sv_messages::ConnectionCmd_NetTableState* nettablestate) {
  delete nettablestate_;
  nettablestate_ = nettablestate;
  if (nettablestate) {
    set_has_nettablestate();
  } else {
    clear_has_nettablestate();
  }
  // @@protoc_insertion_point(field_set_allocated:cl_sv_messages.ConnectionCmd.netTableState)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace cl_sv_messages

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ConnectionCmd_2eproto__INCLUDED
